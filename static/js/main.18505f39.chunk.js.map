{"version":3,"sources":["components/card/Card.js","redux/reddit/redditTypes.js","redux/reddit/redditActions.js","App.js","redux/reddit/redditReducer.js","redux/reducer.js","redux/store.js","index.js","components/card/Card.module.css"],"names":["Card","data","subreddit_name_prefixed","author","permalink","thumbnail","title","num_comments","className","classes","card","href","rel","src","alt","comments","SEARCH_ITEMS","LOADING","getItems","type","payload","loadStatus","searchItems","value","dispatch","a","fetch","res","json","searchData","children","console","log","message","App","useState","searchTerm","setSearchTerm","useDispatch","items","useSelector","state","loading","useEffect","onSubmit","e","preventDefault","alert","placeholder","onChange","target","map","item","id","initialState","error","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"gNAEe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAE7BC,EAMGD,EANHC,wBACAC,EAKGF,EALHE,OACAC,EAIGH,EAJHG,UACAC,EAGGJ,EAHHI,UACAC,EAEGL,EAFHK,MACAC,EACGN,EADHM,aAED,OACC,sBAAKC,UAAWC,IAAQC,KAAxB,UACC,4BACC,mBAAGC,KAAI,gCAA2BT,GAAlC,SACEA,MAGH,4BACC,oBAAGS,KAAI,gCAA2BR,GAAlC,eAA+CA,OAEhD,mBAAGQ,KAAI,gCAA2BP,GAAaQ,IAAI,WAAnD,SACC,qBAAKC,IAAKR,EAAWS,IAAI,OAE1B,6BACC,mBAAGH,KAAI,gCAA2BP,GAAaQ,IAAI,WAAnD,SACEN,MAIH,oBAAGE,UAAWC,IAAQM,SAAtB,sBAA0CR,Q,6BC9BhCS,EAAe,eACfC,EAAU,UCChB,SAASC,EAASjB,GACxB,MAAO,CACNkB,KAAMH,EACNI,QAASnB,GAGJ,SAASoB,IACf,MAAO,CACNF,KAAMF,GAMD,IAAMK,EAAc,eAACC,EAAD,uDAAO,MAAP,8CAAiB,WAAOC,GAAP,iBAAAC,EAAA,6DAC3CD,EAASH,KADkC,kBAGxBK,MAAM,kCAAD,OACIH,EADJ,uBAHmB,cAGpCI,EAHoC,gBAMjBA,EAAIC,OANa,OAMpCC,EANoC,OAO1CL,EAASN,EAASW,EAAW5B,KAAK6B,WAPQ,kDAS1CC,QAAQC,IAAI,KAAIC,SAT0B,0DAAjB,uDCXZ,SAASC,IACvB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMb,EAAWc,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAMA,SAC3CG,EAAUF,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAMG,WAEnDX,QAAQC,IAAIO,GAUZR,QAAQC,IAAIO,GACZI,qBAAU,WACTnB,EAASF,OAEP,IAOH,OACC,gCACC,iCACC,sBAAMsB,SAtBT,SAAsBC,GACrBA,EAAEC,iBACiB,KAAfV,GACHW,MAAM,yBAEPvB,EAASF,EAAYc,KAiBnB,SACC,uBACCjB,KAAK,OACLX,UAAU,SACVwC,YAAY,WACZzB,MAAOa,EACPa,SAdgB,SAACJ,GACrB,IAAQtB,EAAUsB,EAAEK,OAAZ3B,MACRc,EAAcd,UAgBb,+BACEmB,EACA,yCAEAH,EAAMY,KAAI,SAACC,GACV,IAAQnD,EAASmD,EAATnD,KACR,OACC,cAAC,WAAD,UACC,cAACD,EAAD,CAAMC,KAAMA,KADEA,EAAKoD,Y,kBCjDrBC,EAAe,CACpBf,MAAO,GACPG,SAAS,EACTa,MAAO,MCHKC,EAAcC,0BAAgB,CAC1ClB,MDK4B,WAAmC,IAAlCE,EAAiC,uDAAzBa,EAAcI,EAAW,uCAC9D,OAAQA,EAAOvC,MACd,KAAKF,EACJ,OAAO,2BACHwB,GADJ,IAECC,SAAS,IAGX,KAAK1B,EACJ,OAAO,2BACHyB,GADJ,IAECF,MAAOmB,EAAOtC,QACdsB,SAAS,EACTa,MAAO,KAET,QACC,OAAOd,M,iCEdKkB,EALDC,sBACbJ,EACAK,8BAAoBC,0BAAgBC,IAAQC,OCFvCC,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OACR,eAAC,IAAD,CAAUV,MAAOA,EAAjB,UACC,cAAC,aAAD,UACC,cAACzB,EAAD,MAFF,OAOA+B,I,kBCfDK,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,0B","file":"static/js/main.18505f39.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Card.module.css';\r\nexport default function Card({ data }) {\r\n\tconst {\r\n\t\tsubreddit_name_prefixed,\r\n\t\tauthor,\r\n\t\tpermalink,\r\n\t\tthumbnail,\r\n\t\ttitle,\r\n\t\tnum_comments\r\n\t} = data;\r\n\treturn (\r\n\t\t<div className={classes.card}>\r\n\t\t\t<p>\r\n\t\t\t\t<a href={`https://www.reddit.com${subreddit_name_prefixed}`}>\r\n\t\t\t\t\t{subreddit_name_prefixed}\r\n\t\t\t\t</a>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<a href={`https://www.reddit.com${author}`}>u/{author}</a>\r\n\t\t\t</p>\r\n\t\t\t<a href={`https://www.reddit.com${permalink}`} rel=\"noopener\">\r\n\t\t\t\t<img src={thumbnail} alt=\"\" />\r\n\t\t\t</a>\r\n\t\t\t<h3>\r\n\t\t\t\t<a href={`https://www.reddit.com${permalink}`} rel=\"noopener\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</a>\r\n\t\t\t</h3>\r\n\r\n\t\t\t<p className={classes.comments}>Comments {num_comments}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export const SEARCH_ITEMS = 'SEARCH_ITEMS';\r\nexport const LOADING = 'LOADING';\r\n","import {  SEARCH_ITEMS, LOADING } from './redditTypes';\r\n\r\nexport function getItems(data) {\r\n\treturn {\r\n\t\ttype: SEARCH_ITEMS,\r\n\t\tpayload: data\r\n\t};\r\n}\r\nexport function loadStatus() {\r\n\treturn {\r\n\t\ttype: LOADING\r\n\t};\r\n}\r\n\r\n\r\n\r\nexport const searchItems = (value='Cat') => async (dispatch) => {\r\n\tdispatch(loadStatus());\r\n\ttry {\r\n\t\tconst res = await fetch(`\r\n\t\thttps://www.reddit.com/r/${value}/new.json?sort=new`\r\n\t\t);\r\n\t\tconst searchData = await res.json();\t\t\r\n\t\tdispatch(getItems(searchData.data.children));\r\n\t} catch (err) {\r\n\t\tconsole.log(err.message);\r\n\t}\r\n};\r\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from './components/card/Card';\nimport { searchItems } from './redux';\n\nexport default function App() {\n\tconst [searchTerm, setSearchTerm] = useState('');\n\tconst dispatch = useDispatch();\n\tconst items = useSelector((state) => state.items.items);\n\tconst loading = useSelector((state) => state.items.loading);\n\t// API URLS\n\tconsole.log(items);\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\t\tif (searchTerm === '') {\n\t\t\talert(\"Fields Can't be blank\");\n\t\t}\n\t\tdispatch(searchItems(searchTerm));\n\t}\n\n\tconsole.log(items);\n\tuseEffect(() => {\n\t\tdispatch(searchItems());\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst onTextChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tsetSearchTerm(value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<header>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"search\"\n\t\t\t\t\t\tplaceholder=\"e.g. Cat\"\n\t\t\t\t\t\tvalue={searchTerm}\n\t\t\t\t\t\tonChange={onTextChange}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<h1>Loading</h1>\n\t\t\t\t) : (\n\t\t\t\t\titems.map((item) => {\n\t\t\t\t\t\tconst { data } = item;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Fragment key={data.id}>\n\t\t\t\t\t\t\t\t<Card data={data} />\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n","import {  LOADING } from './redditTypes';\r\nimport { SEARCH_ITEMS } from './redditTypes';\r\n\r\nconst initialState = {\r\n\titems: [],\r\n\tloading: false,\r\n\terror: null\r\n};\r\n\r\nexport const redditReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\t\r\n\t\tcase SEARCH_ITEMS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: ''\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { redditReducer } from './reddit/redditReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\titems: redditReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<StrictMode>\n\t\t\t<App />\n\t\t</StrictMode>\n\t\t,\n\t</Provider>,\n\n\trootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__9TGoO\",\"comments\":\"Card_comments__1mLlE\"};"],"sourceRoot":""}